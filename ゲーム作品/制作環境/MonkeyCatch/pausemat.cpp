//=============================================================================
//
// ポーズ台紙処理 [pausemat.cpp]
// Author : 竹内亘
//
//=============================================================================
#include "pausemat.h"
#include "renderer.h"
#include "manager.h"
#include "input.h"
#include "fade.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================
LPDIRECT3DTEXTURE9 CPauseMat::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CPauseMat::CPauseMat() : CLogo(6)
{
	m_col = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
}
//=============================================================================
// デストラクタ
//=============================================================================
CPauseMat::~CPauseMat()
{

}
//=============================================================================
// ポーズ台紙初期化処理
//=============================================================================
HRESULT CPauseMat::Init(D3DXVECTOR3 pos)
{
	CLogo::Init(pos);

	m_col = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);

	// 位置の設置
	CLogo::SetPosition(pos, PAUSEMAT_WIDTH, PAUSEMAT_HEIGHT);

	return S_OK;
}
//=============================================================================
// ポーズ台紙終了処理
//=============================================================================
void CPauseMat::Uninit(void)
{
	CLogo::Uninit();
}
//=============================================================================
// ポーズ台紙更新処理
//=============================================================================
void CPauseMat::Update(void)
{

}
//=============================================================================
// ポーズ台紙描画処理
//=============================================================================
void CPauseMat::Draw(void)
{
	CLogo::Draw();
}
//=============================================================================
// 生成
//=============================================================================
CPauseMat * CPauseMat::Create(D3DXVECTOR3 pos)
{
	CPauseMat *pPauseMat = NULL;

	if (pPauseMat == NULL)
	{
		pPauseMat = new CPauseMat;

		if (pPauseMat != NULL)
		{
			pPauseMat->Init(pos);
			pPauseMat->BindTexture(m_pTexture);
		}
	}
	return pPauseMat;
}
//=============================================================================
// テクスチャの読み込み
//=============================================================================
HRESULT CPauseMat::Load(void)
{
	CManager manager;	// インスタンス

	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = manager.GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, PAUSEMAT_TEXTURE, &m_pTexture);

	return S_OK;
}
//=============================================================================
// テクスチャの破棄
//=============================================================================
void CPauseMat::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}
