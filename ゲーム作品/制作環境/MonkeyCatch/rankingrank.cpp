//=============================================================================
//
// ランキングランク処理 [rankingrank.cpp]
// Author : 竹内亘
//
//=============================================================================
#include "rankingrank.h"
#include "renderer.h"
#include "manager.h"
#include "input.h"
#include "fade.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================
LPDIRECT3DTEXTURE9 CRankingRank::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CRankingRank::CRankingRank() : CLogo(3)
{

}
//=============================================================================
// デストラクタ
//=============================================================================
CRankingRank::~CRankingRank()
{

}
//=============================================================================
// ランキングランク初期化処理
//=============================================================================
HRESULT CRankingRank::Init(D3DXVECTOR3 pos)
{
	CLogo::Init(pos);

	// 位置の設置
	CLogo::SetPosition(pos, RANKINGRANK_WIDTH, RANKINGRANK_HEIGHT);

	return S_OK;
}
//=============================================================================
// ランキングランク終了処理
//=============================================================================
void CRankingRank::Uninit(void)
{
	CLogo::Uninit();
}
//=============================================================================
// ランキングランク更新処理
//=============================================================================
void CRankingRank::Update(void)
{

}
//=============================================================================
// ランキングランク描画処理
//=============================================================================
void CRankingRank::Draw(void)
{
	CLogo::Draw();
}
//=============================================================================
// 生成
//=============================================================================
CRankingRank * CRankingRank::Create(D3DXVECTOR3 pos)
{
	CRankingRank *pRankingRank = NULL;

	if (pRankingRank == NULL)
	{
		pRankingRank = new CRankingRank;

		if (pRankingRank != NULL)
		{
			pRankingRank->Init(pos);
			pRankingRank->BindTexture(m_pTexture);
		}
	}
	return pRankingRank;
}
//=============================================================================
// テクスチャの読み込み
//=============================================================================
HRESULT CRankingRank::Load(void)
{
	CManager manager;	// インスタンス

	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = manager.GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, RANKINGRANK_TEXTURE, &m_pTexture);

	return S_OK;
}
//=============================================================================
// テクスチャの破棄
//=============================================================================
void CRankingRank::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}
